#!/usr/bin/env python2
# vim: set ts=4 sw=4 fileencoding=utf-8:
# Luomio <nohappiness@gmail.com>
# Filename: dde-first-run.py
# Create Date: 27-03, 13

from os import path, rename, remove
import locale
import subprocess
import os

def touch(filename):
    with open(filename, 'a') as fp:
        fp.write('')

def add_qq_shortcut():
    _short_cut = "<Control><Alt>Z"
    _action = "/opt/cxoffice/support/apps.com.qq.im/qq-sendkeys.sh"
    _name = u"提取QQ消息"
    if not path.exists(_action):
        return False
    try:
        import gobject
        from dbus import glib
        import dbus
    except ImportError:
        return False

    gobject.threads_init()
    glib.init_threads()
    bus = dbus.SessionBus()
    keybinding = bus.get_object("com.deepin.daemon.KeyBinding", "/com/deepin/daemon/KeyBinding")
    valid, _ =  keybinding.CheckShortcutConflict(_short_cut)
    if valid != "Valid":
        return False
    id, ok = keybinding.AddCustomShortcut(_name, _action)
    if ok == False:
        return False
    keybinding.ModifyShortcut(id, _short_cut)

def add_docs_links(LANG):
    template={'zh_CN':'用户手册'}
    _doc = path.join('/usr/share/doc/deepin-manuals/',LANG)
    if path.exists(_doc) and template.get(LANG):
        _dest = get_xdg_user_dir('DOCUMENTS')
        if not path.exists(_dest):
            os.makedirs(_dest)
        _link=path.join(_dest,template[LANG])
        if not path.exists(_link):
            os.symlink(_doc, _link)

def get_xdg_user_dir(PATH):
    p = subprocess.Popen(['xdg-user-dir',PATH], stdout=subprocess.PIPE)
    status = p.poll()
    if status is None:
        dir = p.stdout.readline().strip()
    else:
        dir = path.expanduser('~')
    return dir


if __name__ == "__main__":
    xdg_default_content="""# This file is written by dde-first-run
# If you want to change or add directories, just edit the line you're
# interested in. All local changes will be retained on the next run
# Format is XDG_xxx_DIR="$HOME/yyy", where yyy is a shell-escaped
# homedir-relative path, or XDG_xxx_DIR="/yyy", where /yyy is an
# absolute path. No other format is supported.
#
XDG_DESKTOP_DIR="$HOME/Desktop"
XDG_DOWNLOAD_DIR="$HOME/Downloads"
XDG_TEMPLATES_DIR="$HOME/Templates"
XDG_PUBLICSHARE_DIR="$HOME/Public"
XDG_DOCUMENTS_DIR="$HOME/Documents"
XDG_MUSIC_DIR="$HOME/Music"
XDG_PICTURES_DIR="$HOME/Pictures"
XDG_VIDEOS_DIR="$HOME/Videos"
"""
    if path.exists(path.expanduser('~/.config/user-dirs.dirs')):
        with open(path.expanduser('~/.config/user-dirs.dirs'),'w') as fp:
            fp.write(xdg_default_content)
    lang, _ = locale.getdefaultlocale()
    chrome_config = None
    if not path.exists(path.expanduser('~/.config/google-chrome')):
        if path.exists('/usr/share/deepin-default-settings/google-chrome/override-chrome-config.tar'):
            chrome_config = '/usr/share/deepin-default-settings/google-chrome/override-chrome-config.tar'
        elif path.exists('/usr/share/deepin-default-settings/google-chrome/chrome-config-%s.tar' % lang):
            chrome_config = '/usr/share/deepin-default-settings/google-chrome/chrome-config-%s.tar' % lang
        elif path.exists('/usr/share/deepin-default-settings/google-chrome/chrome-config.tar'):
            chrome_config = '/usr/share/deepin-default-settings/google-chrome/chrome-config.tar'

    if chrome_config is not None:
        import tarfile
        tar = tarfile.open(chrome_config)
        tar.extractall(path.expanduser('~/.config/'))
        tar.close()

    add_docs_links(lang)

    try:
        add_qq_shortcut()
    except:
        pass

    if path.exists(path.expanduser('~/.config/autostart/dde-first-run.desktop')):
        remove(path.expanduser('~/.config/autostart/dde-first-run.desktop'))
